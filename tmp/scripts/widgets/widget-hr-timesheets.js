(function () {
var module;

module = angular.module('maestrano.analytics.widget-hr-timesheets', ['maestrano.assets']);

module.controller('WidgetHrTimesheetsCtrl', [
  '$scope', 'DhbAnalyticsSvc', 'ChartFormatterSvc', function($scope, DhbAnalyticsSvc, ChartFormatterSvc) {
    var getSettingsCount, unCollapsedSetting, w;
    w = $scope.widget;
    w.initContext = function() {
      if ($scope.isDataFound = angular.isDefined(w.content) && !_.isEmpty(w.content.employees) && !_.isEmpty(w.content.dates)) {
        $scope.employeesOptions = _.map(w.content.employees, function(e) {
          return {
            value: e.id,
            label: e.lastname + " " + e.firstname
          };
        });
        $scope.selectedEmployee = {
          value: $scope.getEmployee().id,
          label: ($scope.getEmployee().lastname) + " " + ($scope.getEmployee().firstname)
        };
        return $scope.unCollapsed = w.metadata.unCollapsed || [];
      }
    };
    $scope.toogleCollapsed = function(categoryName) {
      if (categoryName != null) {
        if (_.find($scope.unCollapsed, (function(name) {
          return categoryName === name;
        }))) {
          $scope.unCollapsed = _.reject($scope.unCollapsed, function(name) {
            return name === categoryName;
          });
        } else {
          $scope.unCollapsed.push(categoryName);
        }
        return w.updateSettings(false);
      }
    };
    $scope.isCollapsed = function(categoryName) {
      if (categoryName != null) {
        if (_.find($scope.unCollapsed, (function(name) {
          return categoryName === name;
        }))) {
          return false;
        } else {
          return true;
        }
      }
    };
    $scope.getEmployee = function() {
      if (!$scope.isDataFound) {
        return false;
      }
      if (w.metadata && w.metadata.employee_id) {
        return _.find(w.content.employees, function(e) {
          return e.id === w.metadata.employee_id;
        }) || w.content.employees[0];
      } else {
        return w.content.employees[0];
      }
    };
    $scope.getEmployeeTimeWorked = function() {
      var employee;
      if (employee = $scope.getEmployee()) {
        return _.find(w.content.employees, function(e) {
          return e.id === employee.id;
        }).total_time_worked;
      }
    };
    $scope.getEmployeeTimeOff = function() {
      var employee;
      if (employee = $scope.getEmployee()) {
        return _.find(w.content.employees, function(e) {
          return e.id === employee.id;
        }).total_time_off;
      }
    };
    unCollapsedSetting = {};
    unCollapsedSetting.initialized = false;
    unCollapsedSetting.initialize = function() {
      return unCollapsedSetting.initialized = true;
    };
    unCollapsedSetting.toMetadata = function() {
      return {
        unCollapsed: $scope.unCollapsed
      };
    };
    w.settings.push(unCollapsedSetting);
    getSettingsCount = function() {
      if (w.settings != null) {
        return w.settings.length;
      } else {
        return 0;
      }
    };
    $scope.$watch(getSettingsCount, function(total) {
      if (total >= 4) {
        return w.loadContent();
      }
    });
    return w;
  }
]);

module.directive('widgetHrTimesheets', function() {
  return {
    restrict: 'A',
    link: function(scope, element) {
      element.addClass("hr");
      return element.addClass("timesheets");
    },
    controller: 'WidgetHrTimesheetsCtrl'
  };
});
})();
//# sourceMappingURL=data:application/json;base64,