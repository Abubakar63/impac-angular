#
# Component generated by Impac! Widget Generator!
#
module = angular.module('impac.components.widgets.accounts-ratios', [])
module.controller('WidgetAccountsRatiosCtrl', ($scope, $q, $filter, ChartFormatterSvc) ->

  w = $scope.widget

  # Define settings
  # --------------------------------------
  $scope.orgDeferred = $q.defer();
  $scope.chartDeferred = $q.defer();
  $scope.timePeriodDeferred = $q.defer()
  $scope.histModeDeferred = $q.defer()

  settingsPromises = [
    $scope.orgDeferred.promise,
    $scope.chartDeferred.promise,
    $scope.timePeriodDeferred.promise,
    $scope.histModeDeferred.promise
  ]

  $scope.getTotal = (member) ->
    total = _.sum(w.content.calculation[member].totals)
    $filter('mnoCurrency')(total, w.content.currency)

  # Widget specific methods
  # --------------------------------------
  w.initContext = ->
    $scope.isDataFound = w.content?


  # Chart formating function
  # --------------------------------------
  $scope.drawTrigger = $q.defer()
  # Format the widget content data for ChartJS.
  w.format = ->
    if $scope.isDataFound
      data = angular.copy(w.content)

      period = null
      period = w.metadata.hist_parameters.period if w.metadata? && w.metadata.hist_parameters?
      dates = _.map data.layout.dates, (date) ->
        $filter('mnoDate')(date, period)

      # inputData = {title: data.type, labels: dates, values: data.values}
      inputData = {labels: dates, datasets: [{title: data.layout.ratio, values: data.calculation.ratio.totals}]}
      options = { currency: data.currency }

      chartData = ChartFormatterSvc.combinedBarChart(inputData, options, false)
      
      # calls chart.draw()
      $scope.drawTrigger.notify(chartData)
  

  # Widget is ready: can trigger the "wait for settings to be ready"
  # --------------------------------------
  $scope.widgetDeferred.resolve(settingsPromises)
)
module.directive('widgetAccountsRatios', ->
  return {
    restrict: 'A',
    controller: 'WidgetAccountsRatiosCtrl'
  }
)
