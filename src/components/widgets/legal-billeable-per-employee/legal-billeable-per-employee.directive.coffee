#
# Component generated by Impac! Widget Generator!
#
module = angular.module('impac.components.widgets.legal-billeable-per-employee', [])
module.controller('WidgetLegalBilleablePerEmployeeCtrl', ($scope,$q,ChartFormatterSvc) ->

  w = $scope.widget

  # Define settings
  # --------------------------------------
  $scope.orgDeferred = $q.defer()

  settingsPromises = [
    $scope.orgDeferred.promise,
  ]

  BILLED_MIN = 3000
  BILLED_MAX = 15000
  CUSTOMERS_MIN = 3
  CUSTOMERS_MAX = 8
  CUSTOMERS = [
    { name: 'Sébastien Gabriel' },
    { name: 'Catherine Ethan' },
    { name: 'Justine Marie' },
    { name: 'Mathias Louis' },
    { name: 'Gautier Michaud' },
    { name: 'Joël Descoteaux' },
    { name: 'Judith Blaise' },
    { name: 'Gilberte Cousineau' },
    { name: 'Arlette Gagne' },
    { name: 'Daphné Plourde' },
    { name: 'Pénélope Salomon' },
    { name: 'Amédée Paul' },
    { name: 'Édouard Jordan' },
    { name: 'Geoffroy Richard' }
  ]

  $scope.employees =
    list: [
      { id: '1', firstname: 'Rosalie', lastname: 'Morel', title: 'Partner', display: false },
      { id: '2', firstname: 'Pierrick', lastname: 'Lapointe', title: 'Associate', display: false },
      { id: '3', firstname: 'Georges', lastname: 'Renaud', title: 'Associate', display: false },
      { id: '4', firstname: 'Roger', lastname: 'Monette', title: 'Executive', display: false },
      { id: '5', firstname: 'Melisande', lastname: 'Fosse', title: 'Executive', display: false },
      { id: '6', firstname: 'Killian', lastname: 'Masson', title: 'Executive', display: false },
      { id: '7', firstname: 'Ruben', lastname: 'Girard', title: 'Clerc', display: false },
      { id: '8', firstname: 'Marcelle', lastname: 'Paget', title: 'Clerc', display: false },
      { id: '9', firstname: 'Rodolphe', lastname: 'Hebert', title: 'Clerc', display: false },
      { id: '10', firstname: 'Philomene', lastname: 'Abraham', title: 'Clerc', display: false }
    ]
  
  $scope.periods =
    list: [
      { value: 'MONTHLY', label: 'Month' },
      { value: 'QUARTERLY', label: 'Quarter' },
      { value: 'YEARLY', label: 'Year' }
    ]
    selected: 'MONTHLY'

  titleWeight = (title) ->
    switch title
      when 'Clerc'
        1
      when 'Executive'
        2
      when 'Associate'
        3
      when 'Partner'
        5

  periodWeight = (period) ->
    switch period
      when 'MONTHLY'
        1
      when 'QUARTERLY'
        # Random between 2 and 4 to avoid having always quarterly = 3 * monthly
        Math.random() * 2 + 2
      when 'YEARLY'
        # Random between 10 and 14 to avoid having always yearly = 12 * monthly
        Math.random() * 4 + 10

  # Weight the base depending on title and period
  weightedBilled = (base, title, period) ->
    weight1 = titleWeight(title)
    weight2 = periodWeight(period)
    base * weight1 * weight2

  generateCustomers = (title) ->
    nbCustomers = Math.random() * (CUSTOMERS_MAX - CUSTOMERS_MIN) + CUSTOMERS_MIN
    customersBase = _.slice(_.shuffle(CUSTOMERS), 0, nbCustomers)
    _.map(customersBase, (c) ->
      customer = angular.copy(c)
      baseBilled = Math.random() * (BILLED_MAX - BILLED_MIN) + BILLED_MIN
      angular.merge(customer, {
        billed:
          MONTHLY: weightedBilled(baseBilled, title, 'MONTHLY')
          QUARTERLY: weightedBilled(baseBilled, title, 'QUARTERLY')
          YEARLY: weightedBilled(baseBilled, title, 'YEARLY')
      })
    )

  calculateTotals = (customers) ->
    {
      MONTHLY: _.sum(customers, (c) -> c.billed['MONTHLY'])
      QUARTERLY: _.sum(customers, (c) -> c.billed['QUARTERLY'])
      YEARLY: _.sum(customers, (c) -> c.billed['YEARLY'])
    }

  # Generate list of customers for each employee
  prepareCustomers = (employees) ->
    for employee in employees
      employee.customers = generateCustomers(employee.title)
      employee.billed = calculateTotals(employee.customers)

  $scope.toggleEmployee = (employee) ->
    for e in $scope.employees.list
      if e.id == employee.id
        e.display = !e.display
        $scope.employees.selected = (if e.display then employee else null)
      else
        e.display = false

  # Widget specific methods
  # --------------------------------------
  w.initContext = ->
    prepareCustomers($scope.employees.list)
    $scope.isDataFound = true

  # Widget is ready: can trigger the "wait for settings to be ready"
  # --------------------------------------
  $scope.widgetDeferred.resolve(settingsPromises)
)
module.directive('widgetLegalBilleablePerEmployee', ->
  return {
    restrict: 'A',
    controller: 'WidgetLegalBilleablePerEmployeeCtrl'
  }
)
